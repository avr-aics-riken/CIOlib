/*
 * CIOlib - Cartesian Input / Output library
 *
 * Copyright (c) 2013 Advanced Institute for Computational Science, RIKEN.
 * All rights reserved.
 *
 */


PREREQUISITE
============
- MPI library
- Text parsing library



HOW TO COMPILE
==============

1. with configure

$ ./configure [options]
$ make
# make install



Configure options:

 --host=hostname
    Specify in case of cross-compilation.

 --prefix=INSTALL_DIR
    Specify a directory to be installed. The default directory is /usr/local/CIOlib.

 --with-mpich=MPICH_DIR
    If you will use the MPICH library, specify the directory that MPICH library is 
    installed. Either --with-mpich or --with-ompi option will be required except using 
    a wrapper compiler. If the wrapper compiler, e.g., mpic++ or mpicxx is used to
    compile, both options can be eliminated.

 --with-ompi=OPENMPI_DIR
    If the OpenMPI library is used, specify the directory path.

 --with-parser=TEXTPARSER_PATH
    Specify the directory path that TextParser library is installed.


 CXX=CXX_COMPILER
   Specify C++ compiler or a wrapper compiler for MPI. If a wrapper compiler is specified, 
   set string as CXX=mpiCC without directory prefix. To do so, please set path before
   compilation.

 CXXFLAGS=CXX_OPTIONS
    Specify compiler options.



Here is examples. 

## for the combination of Intel compiler and OpenMPI.

  $ ./configure --with-ompi=/opt/openmpi \
                --with-parser=/usr/local/TextParser \
                CXX=icpc \
                CXXFLAGS="-O3 -Wall"


## OpenMPI with wrapper compiler, assume that mpicxx is a wrapper compiler for OpenMPI.

  $ ./configure --with-parser=/usr/local/TextParser CXX=mpicxx CXXFLAGS=-O3


## K-computer

  $ ./configure --prefix=$1 \
                --with-parser=hoge \
                --host=sparc64-unknown-linux-gnu \
                CXX=mpiFCCpx \
                CXXFLAGS=-Kfast


2. Hand compile

If a provided configure does not work, use Makefile_hand to build this library. At first,
edit MACRO to tell your machine environment.

